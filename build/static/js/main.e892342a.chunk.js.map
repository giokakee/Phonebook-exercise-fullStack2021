{"version":3,"sources":["service/person.js","content/phonebook.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","service","getAll","axios","get","then","res","data","create","newPerson","post","deleteOne","id","delete","ListOfPersons","phonebook","deletePerson","className","name","number","onClick","App","useState","setPhonebook","newPersonName","setNewPersonName","newPersonNumber","setNewPersonNumber","useEffect","onSubmit","event","preventDefault","newOne","length","Math","max","map","mp","date","Date","value","onChange","e","target","maxLength","maxlength","type","filteredPhonebook","filter","filt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4OAEMA,EAAU,iBAmBDC,EALC,CACZC,OAZW,WAEX,OADcC,IAAMC,IAAIJ,GACTK,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAUvBC,OARG,SAACC,GACZ,OAAON,IAAMO,KAAKV,EAASS,GAAWJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,SAOtCI,UALF,SAACC,GACf,OAAOT,IAAMU,OAAN,UAAgBb,EAAhB,YAA2BY,M,OCHvBE,EAPO,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,aAC/B,OACI,+BAAuB,sBAAMC,UAAU,OAAhB,SAAwBF,EAAUG,OAAzD,OAAyE,sBAAMD,UAAU,SAAhB,SAA0BF,EAAUI,SAA7G,IAA4H,wBAAQC,QAASJ,EAAcC,UAAU,eAAzC,eAA5H,MAASF,EAAUH,KCuGZS,MApGf,WAAgB,IAAD,EACqBC,mBAAS,IAD9B,mBACNP,EADM,KACKQ,EADL,OAE6BD,mBAAS,IAFtC,mBAENE,EAFM,KAESC,EAFT,OAGiCH,mBAAS,IAH1C,mBAGNI,EAHM,KAGWC,EAHX,KA2Db,OAvDAC,qBAAU,WACR3B,EACGC,SACEG,MAAK,SAACC,GACLiB,EAAajB,QAEnB,IAkDA,qBAAKW,UAAU,MAAf,SAEM,sBAAKA,UAAU,gBAAf,UACI,sBAAKA,UAAU,UAAf,UACE,gDACE,uBAAMY,SApCZ,SAACC,GAGT,GAFAA,EAAMC,iBAEHP,GAAiBE,EAAgB,CAClC,IAAIM,EAAS,CACXpB,IAXQG,EAAUkB,OAAS,EAC7BC,KAAKC,IAAL,MAAAD,KAAI,YAAQnB,EAAUqB,KAAI,SAAAC,GAAE,OAAIA,EAAGzB,QACnC,GACW,EASTM,KAAMM,EACNL,OAAQO,EACRY,KAAM,IAAIC,MAEZtC,EACGO,OAAOwB,GACL3B,MAAK,SAAAC,GACJiB,EAAajB,MAGrBqB,EAAmB,IACnBF,EAAiB,KAmBH,UACI,qCACA,uBAAOe,MAAShB,EAAeiB,SAvDrC,SAACC,GAEbA,EAAEX,iBACFN,EAAiBiB,EAAEC,OAAOH,QAoD0CI,UAAU,OAC5D,uCACA,uBAAOJ,MAASd,EAAiBe,SApDrC,SAACC,GAEfA,EAAEX,iBACFJ,EAAmBe,EAAEC,OAAOH,QAiD4CK,UAAU,OAChE,uBACA,wBAAQC,KAAK,SAAS7B,UAAU,YAAhC,uBAIN,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAY,kBAAjB,SACI,6CAGA,qBAAKA,UAAU,gBAAf,SACQ,6BACDF,EAAUqB,KAAI,SAACC,GACd,OACE,cAAC,EAAD,CAEAtB,UAAWsB,EACXrB,aAAc,kBAtC1BJ,EAsC6CyB,EAAGzB,QArClEX,EACEU,UAAUC,GACTP,MAAK,SAAAC,GACJ,IAAIyC,EAAoBhC,EAAUiC,QAAQ,SAAAC,GAAI,OAAIA,EAAKrC,KAAOA,KAC9DW,EAAawB,MALA,IAACnC,IAoCiByB,EAAGzB,oBCjF3BsC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB/C,MAAK,YAAkD,IAA/CgD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e892342a.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst baseUrl = '/api/phonebook'\r\n\r\n\r\nconst getAll = () => {\r\n    let request = axios.get(baseUrl)\r\n    return request.then(res => res.data)    \r\n}\r\nconst create = (newPerson) => {\r\n    return axios.post(baseUrl, newPerson).then(res => res.data)\r\n}\r\nconst deleteOne = (id) => {\r\n    return axios.delete(`${baseUrl}/${id}`)\r\n}\r\n\r\nconst service = {\r\n    getAll, create, deleteOne\r\n}\r\n\r\n\r\nexport default service\r\n","//import react from 'react'\r\n\r\n\r\nconst ListOfPersons = ({phonebook, deletePerson}) => {\r\n    return(\r\n        <li key={phonebook.id}><span className='name'>{phonebook.name}</span>:   <span className='number'>{phonebook.number}</span> <button onClick={deletePerson} className='deleteButton' >x</button> </li> \r\n    )\r\n}\r\n\r\n\r\nexport default ListOfPersons","import './App.css';\nimport react, {useState, useEffect} from 'react'\nimport service from './service/person'\nimport ListOfPersons from './content/phonebook'\n\n\n\n\nfunction App() {\n  const [phonebook, setPhonebook] = useState([])\n  const [newPersonName, setNewPersonName] = useState('')\n  const [newPersonNumber, setNewPersonNumber] = useState('')\n  useEffect(() => {\n    service\n      .getAll()\n        .then((res) => {\n          setPhonebook(res)\n        })\n  },[])\n \n  let newName = (e) => {\n    \n    e.preventDefault()\n    setNewPersonName(e.target.value)\n  }\n  let newNumber = (e) => {\n    \n    e.preventDefault()\n    setNewPersonNumber(e.target.value)\n  }\n  let generatedId = () => {\n    let maxId = phonebook.length > 0 \n    ? Math.max(...phonebook.map(mp => mp.id))\n    : 0\n    return maxId+1\n  }\n\n  let add = (event) => {\n    event.preventDefault()\n    \n    if(newPersonName && newPersonNumber){\n      let newOne = {\n        id:generatedId(),\n        name: newPersonName,\n        number: newPersonNumber,\n        date: new Date()\n      }\n      service\n        .create(newOne)\n          .then(res => {\n            setPhonebook(res)\n          })\n    }\n    setNewPersonNumber('')\n    setNewPersonName('')\n  }\n\n  let deletePerson = (id) => {\n    service\n     .deleteOne(id)\n      .then(res => {\n        let filteredPhonebook = phonebook.filter( filt => filt.id !== id)\n        setPhonebook(filteredPhonebook)\n      })\n  }\n\n\n  return (\n    <div className=\"App\">\n     \n          <div className='fullPhonebook'>\n              <div className='addForm'>\n                <h1>add new number</h1>\n                  <form onSubmit={add}>\n                      <p>name</p>\n                      <input value = {newPersonName} onChange={newName} maxLength=\"30\" />\n                      <p>number</p>\n                      <input value = {newPersonNumber} onChange={newNumber} maxlength=\"20\" />\n                      <br></br>\n                      <button type=\"submit\" className='addButton' >add</button>\n                    </form>\n              </div>\n\n                <div className='phonebook'>\n                    <div className = 'phonebookHeader'>\n                        <h1>Phonebook</h1>\n                    </div>\n                \n                        <div className='phonebookList'>\n                                <ul>\n                              {phonebook.map((mp) => {\n                                return(\n                                  <ListOfPersons \n                                  key={mp.id}\n                                  phonebook={mp}\n                                  deletePerson={() => deletePerson(mp.id)}\n                                    />\n                                )\n                              })}\n                            </ul>\n                        </div>\n                      </div>\n          </div>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}